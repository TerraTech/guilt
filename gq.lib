#!/bin/bash

function find_git_dir_nice
{
	git-rev-parse --git-dir
}

function find_git_dir
{
	d=`find_git_dir_nice`

	[ $? -ne 0 -o -z "$d" ] && exit 1

	echo "$d"
}

function get_branch
{
	git-symbolic-ref HEAD | sed -e 's,^refs/heads/,,'
}

function get_branch_verify
{
	b=`get_branch`
	if [ ! -d "$GIT_DIR/patches/$branch" ]; then
		echo "Branch $branch is not initialized, try gq-init"
		exit 1
	fi

	echo "$b"
}

function get_top
{
	tail -1 $GQ_DIR/$branch/status
}

function refresh_patch
{
	rev="$1"
	fname="$GQ_DIR/$branch/$2"

	# grab the commit message
	git-cat-file -p $rev | awk 'BEGIN{ok=0}{if (ok==1) print $0}/^$/{ok=1}' > "$fname.tmp"

	lines=`wc -l < "$fname.tmp"`
	tline=`cat "$fname.tmp"`
	if [ $lines -eq 1 -a "$tline" = "patch $2" ]; then
		# no real commit message
		echo -n "" > "$fname.tmp"
	else
		# real commit message, separate by an empty line
		echo "" >> "$fname.tmp"
	fi

	# get the diff
	git-diff $rev^ $rev >> "$fname.tmp"

	mv "$fname.tmp" "$fname"
}

