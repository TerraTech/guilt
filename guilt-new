#!/bin/bash
#
# Copyright (c) Josef "Jeff" Sipek, 2006, 2007
#

source "`dirname $0`/guilt"

USAGE="$USAGE [-s] [-e|-m message] <patchname>"

if [ $# -lt 1 -o $# -gt 4 ]; then
	print_usage
	exit 1
fi

while [ $# -gt 0 ] ; do
	case "$1" in
		-s)
			signoff=t
			;;
		-e)
			edit=t

			if [ ! -z "$msg" ]; then
				print_usage
				exit 1
			fi
			;;
		-m)
			msg="$2"
			shift

			if [ ! -z "$edit" ]; then
				print_usage
				exit 1
			fi
			;;
		*)
			if [ ! -z "$patch" ]; then
				print_usage
				exit 1
			fi
			patch="$1"
			;;
	esac
	shift
done

if [ -z "$patch" ]; then
	print_usage
	echo "You must specify a patch name"
	exit 1
fi

if [ -f "$GUILT_DIR/$branch/$patch" ]; then
	echo "patch '$patch' already exist" >&2
	exit 1
fi

iidx=`wc -l < $applied`

# make sure that there are no unapplied changes
if ! must_commit_first; then
	echo "Uncommited changes detected. Refresh first."
	exit 1
fi

# create any directories as needed
[ "`dirname $patch`" != "." ] && mkdir -p `dirname $GUILT_DIR/$branch/$patch`

# create the file with the right contents
(
# did we get a message with -m ?
[ ! -z "$msg" ] && echo "$msg"

# add a sign-off-by (-s)
[ "$signoff" = "t" ] && echo -e "\nSigned-off-by: `git-var GIT_COMMITTER_IDENT | sed -e 's/>.*/>/'`"
) >> $GUILT_DIR/$branch/$patch

# edit -e ?
[ "$edit" = "t" ] && $editor $GUILT_DIR/$branch/$patch

# insert the patch name into the series file
series_insert_patch $patch

# apply the patch
push_patch $patch
