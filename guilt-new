#!/bin/bash
#
# Copyright (c) Josef "Jeff" Sipek, 2006, 2007
#

source "`dirname $0`/guilt"

USAGE="$USAGE [-s] [-m message] <patchname>"

if [ $# -lt 1 -o $# -gt 4 ]; then
	print_usage
	exit 1
fi

while [ $# -gt 0 ] ; do
	case "$1" in
		-s)
			signoff=t
			;;
		-m)
			msg="$2"
			shift
			;;
		*)
			if [ ! -z "$patch" ]; then
				print_usage
				exit 1
			fi
			patch="$1"
			;;
	esac
	shift
done

if [ -z "$patch" ]; then
	print_usage
	echo "You must specify a patch name"
	exit 1
fi

iidx=`wc -l < $applied`

# make sure that there are no unapplied changes
if ! must_commit_first; then
	echo "Uncommited changes detected. Refresh first."
	exit 1
fi

# create any directories as needed
[ "`dirname $patch`" != "." ] && mkdir -p `dirname $GUILT_DIR/$branch/$patch`

# create the empty patch file
touch $GUILT_DIR/$branch/$patch

[ ! -z "$msg" ] && echo "$msg" > $GUILT_DIR/$branch/$patch

[ "$signoff" = "t" ] && echo -e "\nSigned-off-by: `git-var GIT_COMMITTER_IDENT | sed -e 's/>.*/>/'`" >> $GUILT_DIR/$branch/$patch

top=`get_top`

if [ ! -z "$top" ]; then
	sed -i -e "s,^$top\$,$top\n$patch," $series
else
	echo "$patch" > $series.tmp
	cat $series >> $series.tmp
	mv $series.tmp $series
fi

# apply the patch
push_patch $patch
